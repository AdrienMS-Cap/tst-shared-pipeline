name: Combined CI/CD Workflow

on:
  workflow_call:
    inputs:
      repository:
        required: true
        type: string
      branch:
        required: true
        type: string
permissions: write-all

jobs:
  print-environment-variables:
    runs-on: ubuntu-latest
    steps:
  
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Print All Variables
        run: |
          echo "Printing all environment variables:"
          printenv  

  ansible_lint:
    name: Run Ansible Lint
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.branch }}

      - name: List Files to be Linted
        run: |
          echo "Listing all YAML files that will be linted, excluding '.github' folder:"
          files=$(find . -name '*.yml' -or -name '*.yaml' | grep -v './.github/' || true)
          if [ -z "$files" ]; then
            echo "No YAML files found for linting."
          else
            echo "$files"
          fi

      - name: Run Ansible Lint
        uses: ansible/ansible-lint@v6.22.1
        with:
          args: --profile production --exclude .github/

  readme_change_check:
    name: Run Readme Change Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get initial commit hash
        id: initial_commit
        run: |
          echo "hash=$(git rev-list --max-parents=0 HEAD)" >> $GITHUB_ENV
          
      - name: Check if README.md changed since initial commit
        run: |
          if git diff --exit-code ${{ env.hash }} -- README.md
          then
            echo "README.md has not changed since the initial commit."
          else
            echo "README.md has changed since the initial commit."
          fi

  secrets_scan:
    name: Run Secrets Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.branch }}
      - name: Download the script
        run: |
          curl -L \
          -H "Accept: application/vnd.github.raw" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          -O \
          https://api.github.com/repos/AdrienMS-Cap/tst-shared-pipeline/contents/scripts/scan_secrets.py 
   
      - name: Run Python script
        run: python scan_secrets.py ./ --ignore .gitignore     

  shellcheck:
    name: Run ShellCheck
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install ShellCheck
        run: |
          sudo apt update
          sudo apt install -y shellcheck
  
      - name: Run ShellCheck
        run: |
          output_shellcheck=$(find . -type f -name "*.sh" -exec shellcheck --severity=warning {} \;)
          echo "$output_shellcheck"
          echo "shellcheck=${output_shellcheck}" >> $GITHUB_ENV           
      # - name: Check ShellCheck output
      #   run: |
      #     if [[ -n "${{ env.shellcheck }}" ]]; then
      #       echo "ShellCheck found issues in the scripts."
      #       exit 1
      #     fi
  psscriptanalyzer:
    name: Run PSScriptAnalyzer
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install PSScriptAnalyzer
        run: |
          Install-Module -Name PSScriptAnalyzer -Force -Confirm:$false
  
      - name: Run PSScriptAnalyzer
        run: |
          Get-ChildItem -Recurse -Filter "*.ps1" | ForEach-Object {
            Write-Host "Analyzing $($_.FullName)" 
            Invoke-ScriptAnalyzer -Path $_.FullName -EnableExit -Severity Error
          }

  merge-on-success:
    name: Merge on Success
    runs-on: ubuntu-latest
    needs: [ansible_lint,readme_change_check,secrets_scan,shellcheck]
    if: ${{ github.event_name == 'pull_request' }}    
    steps:

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: ${{ github.event.inputs.repository }}
          ref: ${{ github.event.inputs.pull_request_ref }}

      - name: Merge Pull Request
        run: |
          curl -L \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -X PUT \
            -d '{"merge_method":"squash"}' \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/merge"

      - name: Delete Merged Branch
        run: |
          curl -L \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -X DELETE \
            "https://api.github.com/repos/${{ github.repository }}/git/refs/heads/${{ github.head_ref  }}" 